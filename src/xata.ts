// Generated by Xata Codegen 0.29.0. Please do not edit.
import type { BaseClientOptions, SchemaInference, XataRecord } from '@xata.io/client';
import { buildClient } from '@xata.io/client';

const tables = [
  {
    name: 'questions',
    columns: [
      { name: 'content', type: 'string' },
      { name: 'type', type: 'string' },
      { name: 'hint', type: 'string' },
      { name: 'xatacreatedAt', type: 'datetime' },
      { name: 'xataupdatedAt', type: 'string' },
      { name: 'xataversion', type: 'int' },
    ],
    revLinks: [{ column: 'question', table: 'choices' }],
  },
  {
    name: 'choices',
    columns: [
      { name: 'question_id', type: 'string' },
      { name: 'content', type: 'string' },
      { name: 'is_correct', type: 'bool' },
      { name: 'xatacreatedAt', type: 'datetime' },
      { name: 'xataversion', type: 'int' },
      { name: 'xataupdatedAt', type: 'string' },
      { name: 'question', type: 'link', link: { table: 'questions' } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Questions = InferredTypes['questions'];
export type QuestionsRecord = Questions & XataRecord;

export type Choices = InferredTypes['choices'];
export type ChoicesRecord = Choices & XataRecord;

export type DatabaseSchema = {
  questions: QuestionsRecord;
  choices: ChoicesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: 'https://i-H-s-workspace-706mhl.ap-southeast-2.xata.sh/db/vani-quiz',
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options, enableBrowser: true }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
